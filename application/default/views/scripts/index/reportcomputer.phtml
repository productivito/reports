<div id="reportTimeSelector">
    <?php echo $this->partial('index/userreportfilters.phtml', array()); ?>
</div>
<div id="report">
    <div class="loader" id="loader">
        <img class="loader-image" src="<?php echo $this->baseUrl('img/ajax-loader.gif'); ?>" /><br/>
        <h3>Se incarca date de la server, va rugam asteptati.</h3>
    </div>
    <h2>
        Raport de utilizare a calculatorului
        <a href="#" style="float:right">Descrie raport</a>
    </h2><hr/>
    <div id="tableChartDraw" style="width:100%;margin:10px auto;">
		<div id="responseDataTableChartBar" style="height:110px;width:100%;"></div>
        <div id="responseDataTableChart" style="height:400px;width:100%;"></div>
    </div>
    <div id="tableTabs" class="tabs" style="margin-bottom:10px;padding-bottom:10px;">
        <input type="hidden" id="resultFilters" />
        <input type="hidden" id="resultContainer" />
        <div id="container">
        	<div id="tableContainer"></div>
      		<span id="menuButton" style="float:right;margin-top:-33px;"><button id="ajaxCallPaginationPrevious">Previous</button>
      		<button id="ajaxCallPaginationNext">Next</button></span>
      	</div>
    </div>
    <div class="export" id="exportDocuments">
        <hr/>
        <a href="#" onclick="javascript:exportCurrent('csv');">Export Excel CSV</a>
        &nbsp;&nbsp;|&nbsp;&nbsp;
        <a href="#" onclick="javascript:exportCurrent('pdf');">Export PDF</a>
    </div>
</div>
<script type="text/javascript">
    // Link the local processing action to the filtering pane
    $(document).ready(function() {
        
        var topResponseData = null;
        
        $('#tableTabs').hide();
        $('#tableChartDraw').hide();
        $('#tableTabs').tabs();
        $('#reGenerateChart').click(function() {
            $('#tableChartDraw').hide();
            processDocumentsChart(topResponseData, $("#reGenerateChartRecNo").val());
            $('#tableChartDraw').show();
        });
        $('#ajaxTimedFilterAction').click(function() {
            var myFilters = getTimesSelectedFilters();
            if (myFilters !== false) {
                var call = $.ajax({
                    type: 'POST',
                    url: '<?php echo $this->baseUrl('ajax/computer'); ?>',
                    data: {
                        filters : myFilters,
                        users : parseUserSelectors(),
                        page : 1,
                        type : 'all'
                    },
                    beforeSend: function() {
                        $('#tableContainer').empty();
                        $('#cronoContainer').empty();
                        $('#tableTabs').hide();
                        $('#loader').show();
                        $('#tableChartDraw').hide();
                    },
                    statusCode: {
                        404: function() { alert("Request-ul nu a putut fi procesat - ACTIUNE INEXISTENTA."); },
                        500: function() { alert("Request-ul nu a putut fi procesat - EROARE DE RETEA."); }
                    }
                }).done(function() {
                    var data = eval('(' + call.responseText + ')');
                    $('#tableContainer').html(processDocumentsTable(data,1,100));
                    $('#responseDataTable').dataTable( { "aaSorting": [[ 2, "asc" ], [3, "asc"]] } );
				    $('.stopListLink').click(function() {
				    	var localId = $(this).attr('id');
				    	var localClass = $(this).attr('class');
				    	
						getStoppedTime(localId,localClass);
				    });  	
			 		$("select").change(function () {
			          	ajaxCallSetNumberElementsPerPage($(this).attr('value'));   
			        }); 		

                    // Keep data and filters
                    $('#resultFilters').val(data.filters);
                    topResponseData = data;
                    processDocumentsChart(data, 10);
                    
                    if((parseUserSelectors()).length == 1){
                    	processDocumentsChartBar(data);
                    }
                    else{
                    	$('#responseDataTableChartBar').empty();
                    	$('#responseDataTableChartBar').hide();
                    }
                    //console.log(data.filters.users.length);
                    $('#tableChartDraw').show();
                    
                }).fail(function() {
                    $('#tableContainer').html("<center style=\"margin:20px 0px;\">" + call.responseText + "</center>");
                }).always(function() {
                    $('#loader').hide();
                    $('#tableTabs').show();
                });
            }
        });
        
  	    $('#ajaxCallPaginationNext').click(ajaxCallPaginationNext);
        $('#ajaxCallPaginationPrevious').click(ajaxCallPaginationPrevious);           
        
    });
    
    
	var ajaxCallPaginationNext = function() {
	
		var page = $("#currentPage").text();
		var n = 100;
		page = parseInt(page) + 1;
		
		if(page > 1)
			$("#ajaxCallPaginationPrevious").removeAttr('disabled');		
        var myFilters = getTimesSelectedFilters();
        if (myFilters !== false) {      
            myFilters.user = $('#orgSelectedUser').text();
            myFilters['users'] = parseUserSelectors();	
            var call = $.ajax({
                type: 'POST',
                url: '<?php echo $this->baseUrl('ajax/computer'); ?>',
                data: {
                    filters : myFilters,
                    users : parseUserSelectors(),
                    page : page,
                    numberPerPage: $("#numberElements :selected").text(),
                    type : 'top'
                },
                beforeSend: function() {
                    n = $("#numberElements :selected").text();
                    $('#tableContainer').empty();
                    $('#tableContainer').html("<img height='60px' width='60px' style='margin-left:500px' src='" + <?php echo "'".$this->baseUrl()."'"; ?> + "/img/ajax-loader-table.gif'></br><span style='margin-left:485px;font-weight:bold;font-size:17px'>Se incarca</span>");
                    $("#menuButton").addClass('hidden');
                },
                statusCode: {
                    404: function() { alert("Request-ul nu a putut fi procesat - ACTIUNE INEXISTENTA."); },
                    500: function() { alert("Request-ul nu a putut fi procesat - EROARE DE RETEA."); }
                }
            }).done(function() {
                var data = eval('(' + call.responseText + ')');
                $('#tableContainer').html(processDocumentsTable(data,page,n));
                $("#menuButton").removeClass('hidden');
			    $('.stopListLink').click(function() {
			    	var localId = $(this).attr('id');
			    	var localClass = $(this).attr('class');
			    	
					getStoppedTime(localId,localClass);
			    });
				    			
		 		$("select").change(function () {
		          	ajaxCallSetNumberElementsPerPage($(this).attr('value'));   
		        }); 		

                // Keep data and filters
                $('#resultFilters').val(data.filters);
                topResponseData = data;

            }).fail(function() {
                $('#tableContainer').html("<center style=\"margin:20px 0px;\">" + call.responseText + "</center>");
            }).always(function() {
                $('#loader').hide();
                $('#tableTabs').show();
            });
          }
    };

	var ajaxCallSetNumberElementsPerPage = function(numberPerPage) {
	
		var page = $("#currentPage").text();
		var n = 100;
		//var n = $("#numberElements :selected").text();
		var elementsPerPage = parseInt(page) * parseInt(numberPerPage);

		if(page > 1)
			$("#ajaxCallPaginationPrevious").removeAttr('disabled');		
        var myFilters = getTimesSelectedFilters();
        if (myFilters !== false) {      
            myFilters.user = $('#orgSelectedUser').text();
            myFilters['users'] = parseUserSelectors();	
            var call = $.ajax({
                type: 'POST',
                url: '<?php echo $this->baseUrl('ajax/computer'); ?>',
                data: {
                    filters : myFilters,
                    users : parseUserSelectors(),
                    page : page,
                    numberPerPage : parseInt(numberPerPage),
                    type : 'top'
                },
                beforeSend: function() {
                    n = $("#numberElements :selected").text();                	
                    $('#tableContainer').empty();
                    $('#tableContainer').html("<img height='60px' width='60px' style='margin-left:500px' src='" + <?php echo "'".$this->baseUrl()."'"; ?> + "/img/ajax-loader-table.gif'></br><span style='margin-left:485px;font-weight:bold;font-size:17px'>Se incarca</span>");
                    $("#menuButton").addClass('hidden');
                    
                },
                statusCode: {
                    404: function() { alert("Request-ul nu a putut fi procesat - ACTIUNE INEXISTENTA."); },
                    500: function() { alert("Request-ul nu a putut fi procesat - EROARE DE RETEA."); }
                }
            }).done(function() {
                var data = eval('(' + call.responseText + ')');
                $('#tableContainer').html(processDocumentsTable(data,page,n));
                
                $("#menuButton").removeClass('hidden');
                
			    $('.stopListLink').click(function() {
			    	var localId = $(this).attr('id');
			    	var localClass = $(this).attr('class');
			    	
					getStoppedTime(localId,localClass);
			    });				
					
		 		$("select").change(function () {
		          	ajaxCallSetNumberElementsPerPage($(this).attr('value'));   
		        }); 

                // Keep data and filters
                $('#resultFilters').val(data.filters);
                topResponseData = data;

            }).fail(function() {
                $('#tableContainer').html("<center style=\"margin:20px 0px;\">" + call.responseText + "</center>");
            }).always(function() {
                $('#loader').hide();
                $('#tableTabs').show();
            });
          }
    };

    
	var ajaxCallPaginationPrevious = function() {
		var page = $("#currentPage").text();
		var n=100;
		page = parseInt(page) - 1;
		if(page == 1)
			$("#ajaxCallPaginationPrevious").attr('disabled','disabled');
        var myFilters = getTimesSelectedFilters();
        if (myFilters !== false) {    
            myFilters.user = $('#orgSelectedUser').text();
            myFilters['users'] = parseUserSelectors();	
            var call = $.ajax({
                type: 'POST',
                url: '<?php echo $this->baseUrl('ajax/computer'); ?>',
                data: {
                    filters : myFilters,
                    users : parseUserSelectors(),
                    page : page,
                    numberPerPage: $("#numberElements :selected").text(),
                    type : 'top'             
                },
                beforeSend: function() {
                    n = $("#numberElements :selected").text();                
                    $('#tableContainer').empty();
                    $('#tableContainer').html("<img height='60px' width='60px' style='margin-left:500px' src='" + <?php echo "'".$this->baseUrl()."'"; ?> + "/img/ajax-loader-table.gif'></br><span style='margin-left:485px;font-weight:bold;font-size:17px'>Se incarca</span>");
                    $("#menuButton").addClass('hidden');                    
                },
                statusCode: {
                    404: function() { alert("Request-ul nu a putut fi procesat - ACTIUNE INEXISTENTA."); },
                    500: function() { alert("Request-ul nu a putut fi procesat - EROARE DE RETEA."); }
                }
            }).done(function() {
                var data = eval('(' + call.responseText + ')');
                $('#tableContainer').html(processDocumentsTable(data,page,n));
               
                $("#menuButton").removeClass('hidden');
                				
			    $('.stopListLink').click(function() {
			    	var localId = $(this).attr('id');
			    	var localClass = $(this).attr('class');
			    	
					getStoppedTime(localId,localClass);
			    });				
					
		 		$("select").change(function () {
		          	ajaxCallSetNumberElementsPerPage($(this).attr('value'));   
		        }); 
		       			

                // Keep data and filters
                $('#resultFilters').val(data.filters);
                topResponseData = data;
                //processDocumentsChart(data, 10);
               // $('#tableChartDraw').show();

            }).fail(function() {
                $('#tableContainer').html("<center style=\"margin:20px 0px;\">" + call.responseText + "</center>");
            }).always(function() {
                $('#loader').hide();
                $('#tableTabs').show();
            });
          }
    };
    
    
    function getStoppedTime(id,localClass)
    {
    		var myFilters = getTimesSelectedFilters();
			var splitResult = id.split(";");

			if($("#stop" + splitResult[2]).html() != "Afisare"){
				$("#stop" + splitResult[2]).html("Afisare");
				return;
			}
			
            var call = $.ajax({
                type: 'POST',
                url: '<?php echo $this->baseUrl('ajax/computerstop'); ?>',
                data: {
                    filters : myFilters,
                    user : splitResult[0],
                    day : splitResult[1]
                },
                beforeSend: function() {
				    $("#stop" + splitResult[2]).html("<img height='30px' width='30px' src='" + <?php echo "'".$this->baseUrl()."'"; ?> + "/img/ajax-loader-table.gif'>");					
                },
                statusCode: {
                    404: function() { alert("Request-ul nu a putut fi procesat - ACTIUNE INEXISTENTA."); },
                    500: function() { alert("Request-ul nu a putut fi procesat - EROARE DE RETEA."); }
                }
            }).done(function() {
                var data = eval('(' + call.responseText + ')');
                $("#stop" + splitResult[2]).html(data.data);  		

                // Keep data and filters
                //$('#resultFilters').val(data.filters);
                //topResponseData = data;
                
            }).fail(function() {
                $('#tableContainer').html("<center style=\"margin:20px 0px;\">" + call.responseText + "</center>");
            }).always(function() {
                $('#loader').hide();
                $('#tableTabs').show();
            });    
    }      

    var processDocumentsTable = function(data,page,elementsPerPage)
    {
        var dt = data.data.usage;
		var select = '<select id="numberElements">'
		var o1 = '<option>10</option>',
			o2 = ' <option>50</option>', 
			o3 = ' <option>100</option>';
		if(elementsPerPage == 10)
			o1 = '<option selected="selected">10</option>';
		if(elementsPerPage == 50)
			o2 = '<option selected="selected">50</option>';
		if(elementsPerPage == 100)
			o3 = '<option selected="selected">100</option>';		
		select = select + o1 + o2 + o3 + "</select>";	
        var output = select + '<table id="topTable">';
        // header
        output += '<thead><tr>';
        output += '<th>Utilizator</th>';
        output += '<th>Data</th>';
        output += '<th>Prima deschidere PC</th>';
        output += '<th>Ultima inchidere PC</th>';
        output += '<th>Timp Activ</th>';
        output += '<th>Timp Pauza</th>';
        output += '<th>Timp Oprit</th>';
        output += '<th>Lista Opriri</th>';
        output += '</tr></thead><tbody>';
        // data
        for (i in dt) {
            output += '<tr>';
            output += '<td>' + dt[i].user + '</td>';
            output += '<td>' + dt[i].day+ '</td>';
            output += '<td>' + dt[i].start+ '</td>';
            output += '<td>' + dt[i].end+ '</td>';
            output += '<td>' + dt[i].activ + '</td>';
            output += '<td>' + dt[i].inactiv + '</td>';
            output += '<td>' + dt[i].oprit + '</td>';
			output += '<td><center><b><span class="stopListLink" id="' + dt[i].user + ';' + dt[i].day + ';' + i  + '"><div style="font-weight:normal" id="stop'+ i +'">Afisare</div></span></b></center></td>'
            output += '</tr>';
        }
        output += '</tbody></table></br>Pagina <div id="currentPage">'+ page + '</div>';
        return output;
    };

    var processDocumentsChart = function(data) {
        $('#responseDataTableChart').empty();
        $('#tableChartDraw').hide();
        
        var chartData = [];
        var dt = data.data.graph;
        if(dt.length != 0)
            chartData.push({
                'user' : '%',
                'active' : (dt[0].active/dt[0].total*100).toFixed(2),
                'breaks' : (dt[0].pause/dt[0].total*100).toFixed(2),
                'stopped' : (dt[0].stopped/dt[0].total*100).toFixed(2),
                'on' : (dt[0].on/dt[0].total*100).toFixed(2)
            });
        else
            return;
        
        
        // SERIAL CHART
        chart = new AmCharts.AmSerialChart();
        chart.dataProvider = chartData;
        chart.categoryField = "user";
        chart.startDuration = 1;
        chart.plotAreaBorderColor = "#DADADA";
        chart.plotAreaBorderAlpha = 1;
        chart.marginBottom = 10;
        // this single line makes the chart a bar chart          
        chart.rotate = true;

        // AXES
        // Category
        var categoryAxis = chart.categoryAxis;
        categoryAxis.gridPosition = "start";
        categoryAxis.gridAlpha = 0.1;
        categoryAxis.axisAlpha = 0;

        // Value
        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.axisAlpha = 0;
        valueAxis.gridAlpha = 0.1;
        valueAxis.position = "top";
        valueAxis.tickLength = 0;
        chart.addValueAxis(valueAxis);

        // GRAPHS

        // first graph
        var graph1 = new AmCharts.AmGraph();
        graph1.type = "column";
        graph1.title = "Timp Activ";
        graph1.valueField = "active";
        graph1.balloonText = "Timp Activ :[[value]]% - " + dt[0].active + " Ore";
        graph1.lineAlpha = 0;
        graph1.fillColors = "#44ad23";
        graph1.fillAlphas = 1;
        chart.addGraph(graph1);

        // second graph
        var graph2 = new AmCharts.AmGraph();
        graph2.type = "column";
        graph2.title = "Timp Pauza ";
        graph2.valueField = "breaks";
        graph2.balloonText = "Timp Pauza (h):[[value]]% - " + dt[0].pause + " Ore";
        graph2.lineAlpha = 0;
        graph2.fillColors = "#ffff00";
        graph2.fillAlphas = 1;
        chart.addGraph(graph2);

        // first graph
        var graph3 = new AmCharts.AmGraph();
        graph3.type = "column";
        graph3.title = "Timp Oprit";
        graph3.valueField = "stopped";
        graph3.balloonText = "Timp Oprit:[[value]]% - "  + dt[0].stopped + " Ore";
        graph3.lineAlpha = 0;
        graph3.fillColors = "#ff0909";
        graph3.fillAlphas = 1;
        chart.addGraph(graph3);

        // second graph
        var graph4 = new AmCharts.AmGraph();
        graph4.type = "column";
        graph4.title = "Timp Pornit";
        graph4.valueField = "on";
        graph4.balloonText = "Timp Pornit:[[value]]% - " + dt[0].on + " Ore";
        graph4.lineAlpha = 0;
        graph4.fillColors = "#0971ff";
        graph4.fillAlphas = 1;
        chart.addGraph(graph4);

        // LEGEND
        var legend = new AmCharts.AmLegend();
        chart.addLegend(legend);

        $('#tableChartDraw').show();
        chart.write("responseDataTableChart");
    };

    var processDocumentsChartBar = function(data) {
        $('#responseDataTableChartBar').empty();
        $('#responseDataTableChartBar').show();
        //$('#tableChartDraw').hide();
        var chart;
        
		var i = 1;

		var chartData = [{}];
		var colors = [];
        var dt = data.data.graphUser;
        for (i in dt) {
            chartData[0]['val1'+i] = dt[i].activ;
            chartData[0]['val2'+i] = dt[i].inactiv;
            chartData[0]['val3'+i] = dt[i].oprit;

			//activ time
            colors['val1'+i] = "#00ff01";
            //break time
            colors['val2'+i] = "#ffff00";
            //stopped time
            colors['val3'+i] = "#ff0909"; 
            i++;           
        }
        	// SERIALL CHART
        	chart = new AmCharts.AmSerialChart();
        	chart.dataProvider = chartData;
        	chart.categoryField = "year";
        	chart.rotate = true;

        	// AXES
        	// Category
        	var categoryAxis = chart.categoryAxis;
        	categoryAxis.gridAlpha = 0;
        	categoryAxis.axisAlpha = 0;
        	categoryAxis.gridPosition = "start";

        	// value                      
        	var valueAxis = new AmCharts.ValueAxis();
        	valueAxis.stackType = "regular";
        	valueAxis.dashLength = 1;
        	valueAxis.gridAlpha = 0.3;
        	valueAxis.axisAlpha = 0;
        	chart.addValueAxis(valueAxis);

        	// GRAPHS
        	for(var key in chartData[0]) {
            	
        		var graph = new AmCharts.AmGraph();
        		graph.labelText = "";
        		graph.valueField = key;
        		if(colors[key] == "#00ff01")
        			graph.balloonText = "Activ [[value]] Ore";
        		if(colors[key] == "#ffff00")
        			graph.balloonText = "Pauza [[value]] Ore";
        		if(colors[key] == "#ff0909")
        			graph.balloonText = "Oprit [[value]] Ore";    			    			
        		chart.balloon.color = "#000000";
        		graph.type = "column";
        		graph.lineAlpha = 0;
        		graph.fillAlphas = 0.8;
        		graph.lineColor = colors[key];
        		chart.addGraph(graph);
        	}

        	

        //$('#tableChartDraw').show();
            
        // WRITE  	
        chart.write("responseDataTableChartBar");
        //$("#responseDataTableChartBar").show();
    };

    
    var exportCurrent = function(type) {
        var myFilters = getTimesSelectedFilters();
        myFilters['users'] = parseUserSelectors();
        var component = 'usage'
        var action = 'computer';
        exportReport(action, myFilters, type, component);
    };

</script>
